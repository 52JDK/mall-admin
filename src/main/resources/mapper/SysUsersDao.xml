<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.robot.admin.dao.SysUsersDao">
    <resultMap id="BaseResultMap" type="com.robot.admin.pojo.SysUsers">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="userName"/>
        <result column="password" jdbcType="VARCHAR" property="passWord"/>
        <result column="salt" jdbcType="VARCHAR" property="salt"/>
        <result column="role_id" jdbcType="VARCHAR" property="roleId"/>
        <result column="locked" jdbcType="BOOLEAN" property="locked"/>
        <result column="img" jdbcType="VARCHAR" property="img"/>
        <result column="role" jdbcType="VARCHAR" property="role"/>
    </resultMap>


    <resultMap id="BaseResultMap2" type="com.robot.admin.pojo.SysUsers">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="userName"/>
        <result column="password" jdbcType="VARCHAR" property="passWord"/>
        <result column="salt" jdbcType="VARCHAR" property="salt"/>
        <result column="role_id" jdbcType="VARCHAR" property="roleId"/>
        <result column="locked" jdbcType="BOOLEAN" property="locked"/>
        <association property="sysRoles" javaType="com.robot.admin.pojo.SysRoles">
            <id column="role_id" jdbcType="BIGINT" property="id"/>
            <result column="role" jdbcType="VARCHAR" property="role"/>
            <result column="description" jdbcType="VARCHAR" property="description"/>
            <result column="pid" jdbcType="BIGINT" property="pid"/>
            <result column="available" jdbcType="BOOLEAN" property="available"/>
        </association>
        <collection property="sysRolesPermissions" ofType="com.robot.admin.pojo.SysRolesPermissions">
            <id column="role_per_id" jdbcType="BIGINT" property="id"/>
            <result column="user_id" jdbcType="BIGINT" property="userId"/>
            <result column="permissions_id" jdbcType="INTEGER" property="permissionsId"/>
            <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
            <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
            <association property="sysPermissions" resultMap="com.robot.admin.dao.SysPermissionsDao.BaseResultMap">
                <id column="per_id" jdbcType="INTEGER"/>
                <result column="menu_code" jdbcType="VARCHAR"/>
                <result column="menu_name" jdbcType="VARCHAR"/>
                <result column="permissions_code" jdbcType="VARCHAR"/>
                <result column="permissions_name" jdbcType="VARCHAR"/>
            </association>
        </collection>
    </resultMap>
    <sql id="Base_Column_List">
    id, username, `password`, salt, role_id, locked,img
  </sql>
    <select id="selectUserRole" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        u.id, u.username,  u.role_id, u.locked,u.img,r.role
        from sys_users u ,sys_roles r
        where u.username=#{userName}
        and u.role_id=r.id
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_users
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.robot.admin.pojo.SysUsers"
            useGeneratedKeys="true">
    insert into sys_users (username, `password`, salt, 
      role_id, locked)
    values (#{userName,jdbcType=VARCHAR}, #{passWord,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR},
      #{roleId,jdbcType=VARCHAR}, #{locked,jdbcType=BOOLEAN})
  </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.robot.admin.pojo.SysUsers"
            useGeneratedKeys="true">
        insert into sys_users
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userName != null">
                username,
            </if>
            <if test="passWord != null">
                `password`,
            </if>
            <if test="salt != null">
                salt,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="locked != null">
                locked,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="passWord != null">
                #{passWord,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                #{salt,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=VARCHAR},
            </if>
            <if test="locked != null">
                #{locked,jdbcType=BOOLEAN},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.robot.admin.pojo.SysUsers">
        update sys_users
        <set>
            <if test="userName != null">
                username = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="passWord != null">
                `password` = #{passWord,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                salt = #{salt,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=VARCHAR},
            </if>
            <if test="locked != null">
                locked = #{locked,jdbcType=BOOLEAN},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.robot.admin.pojo.SysUsers">
    update sys_users
    set username = #{userName,jdbcType=VARCHAR},
      `password` = #{passWord,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=VARCHAR},
      locked = #{locked,jdbcType=BOOLEAN}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <select id="findUserByName" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"></include>
        FROM
        sys_users u
        where u.username=#{userName}
        order by u.id
    </select>


    <resultMap id="roleMap" type="com.robot.admin.pojo.One2Many">
        <id column="userId" property="userId"/>
        <result column="roleId" property="roleId"/>
        <result column="roleName" property="roleName"/>
        <result column="nickname" property="nickname"/>
        <result column="description" property="description"/>
        <collection property="menus" ofType="com.robot.admin.pojo.One2Many">
            <id column="menuCode" property="menuCode"/>
            <result column="menuName" property="menuName"/>
            <collection property="permissions" ofType="com.alibaba.fastjson.JSONObject">
                <id column="permissionCode" property="permissionId"/>
                <result column="permissionName" property="permissionName"/>
            </collection>
        </collection>
    </resultMap>


    <select id="selectBatch" resultMap="roleMap">
 SELECT
	u.id   userId,
	u.username as nickname,
	r.id  roleId,
	r.`role`  roleName,
	r.description description,
	p.id  role_per_id,
	s.id  permissionCode,
	s.menu_code menuCode,
	s.menu_name menuName,
	s.permissions_name permissionName
FROM
	sys_users u left join sys_roles r on u.role_id = r.id
	left join sys_roles_permissions p on u.id = p.user_id
	left join sys_permissions s on s.id = p.permissions_id
	order by u.id
    </select>

</mapper>